digraph CallGraph {
  compound=true;
  rankdir=LR;
  node [shape=box, style=rounded];
  edge [color=blue];

  "types_ts" [label="types.ts", shape=folder, style=filled, fillcolor=lightgray];
  "diagram_ts" [label="diagram.ts", shape=folder, style=filled, fillcolor=lightgray];
  "function_call_analyzer_ts" [label="function-call-analyzer.ts", shape=folder, style=filled, fillcolor=lightgray];
  "graph_adapter_ts" [label="graph-adapter.ts", shape=folder, style=filled, fillcolor=lightgray];
  "graph_diagram_ts" [label="graph-diagram.ts", shape=folder, style=filled, fillcolor=lightgray];
  "graph_operations_ts" [label="graph-operations.ts", shape=folder, style=filled, fillcolor=lightgray];
  "svg_generator_ts" [label="svg-generator.ts", shape=folder, style=filled, fillcolor=lightgray];
  "layout_ts" [label="layout.ts", shape=folder, style=filled, fillcolor=lightgray];
  "miro_ts" [label="miro.ts", shape=folder, style=filled, fillcolor=lightgray];
  "index_ts" [label="index.ts", shape=folder, style=filled, fillcolor=lightgray];
  "layout_ts" -> "svg_generator_ts" [arrowhead=normal];
  "miro_ts" -> "layout_ts" [dir=both, arrowhead=normal, arrowtail=normal, label="function_call:2"];
  "index_ts" -> "function_call_analyzer_ts" [dir=both, arrowhead=normal, arrowtail=normal, label="instantiation:1, function_call:1", style=dashed];
  "index_ts" -> "graph_adapter_ts" [dir=both, arrowhead=normal, arrowtail=normal];
  "index_ts" -> "graph_operations_ts" [dir=both, arrowhead=normal, arrowtail=normal];
  "index_ts" -> "graph_diagram_ts" [dir=both, arrowhead=normal, arrowtail=normal, label="instantiation:1, function_call:2", style=dashed];
  "index_ts" -> "diagram_ts" [dir=both, arrowhead=normal, arrowtail=normal, label="instantiation:1, function_call:2", style=dashed];
  "index_ts" -> "svg_generator_ts" [dir=both, arrowhead=normal, arrowtail=normal, label="instantiation:1, function_call:2", style=dashed];
  "index_ts" -> "miro_ts" [dir=both, arrowhead=normal, arrowtail=normal, label="instantiation:1, function_call:1", style=dashed];
}
